 // Source code is unavailable, and was generated by the Fernflower decompiler.
package com.phantomz3;

import com.mojang.brigadier.arguments.IntegerArgumentType;
import com.mojang.brigadier.builder.LiteralArgumentBuilder;
import java.util.Collection;
import java.util.Iterator;
import me.shedaniel.autoconfig.AutoConfig;
import me.shedaniel.autoconfig.serializer.GsonConfigSerializer;
import net.fabricmc.api.ModInitializer;
import net.fabricmc.fabric.api.command.v2.CommandRegistrationCallback;
import net.fabricmc.fabric.api.entity.event.v1.ServerLivingEntityEvents;
import net.fabricmc.fabric.api.event.lifecycle.v1.ServerTickEvents;
import net.fabricmc.fabric.api.event.player.AttackEntityCallback;
import net.fabricmc.fabric.api.event.player.UseBlockCallback;
import net.fabricmc.fabric.api.event.player.UseItemCallback;
import net.minecraft.class_124;
import net.minecraft.class_1263;
import net.minecraft.class_1269;
import net.minecraft.class_1271;
import net.minecraft.class_1277;
import net.minecraft.class_1299;
import net.minecraft.class_1304;
import net.minecraft.class_1309;
import net.minecraft.class_1657;
import net.minecraft.class_1730;
import net.minecraft.class_1799;
import net.minecraft.class_1802;
import net.minecraft.class_1928;
import net.minecraft.class_1934;
import net.minecraft.class_2168;
import net.minecraft.class_2170;
import net.minecraft.class_2186;
import net.minecraft.class_2487;
import net.minecraft.class_2561;
import net.minecraft.class_3222;
import net.minecraft.class_4969;
import net.minecraft.class_5134;
import net.minecraft.class_747;
import net.minecraft.class_9279;
import net.minecraft.class_9334;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class LifestealMod implements ModInitializer {
   public static final String MOD_ID = "lifestealmod";
   public static final Logger LOGGER = LoggerFactory.getLogger("lifestealmod");

   public void onInitialize() {
      LOGGER.info("Lifesteal mod has been initialized!");
      this.registerConfig();
      this.registerEvents();
      this.registerCommands();
      this.recipeViewRecipeCommand();
      this.registerOpReviveCommand();
   }

   private void registerConfig() {
      AutoConfig.register(ModConfig.class, GsonConfigSerializer::new);
   }

   private void registerEvents() {
      ServerLivingEntityEvents.ALLOW_DEATH.register((entity, source, amount) -> {
         if (entity instanceof class_1657) {
            class_1657 player = (class_1657)entity;
            class_1309 attacker = (class_1309)source.method_5529();
            ModConfig config = (ModConfig)AutoConfig.getConfigHolder(ModConfig.class).getConfig();
            if (attacker instanceof class_1657) {
               class_1657 playerAttacker = (class_1657)attacker;
               if (attacker.method_45326(class_5134.field_23716) < (double)config.maxHeartCap) {
                  this.increasePlayerHealth(playerAttacker);
                  playerAttacker.method_7353(class_2561.method_43470("You gained an additional heart!").method_27692(class_124.field_1080), true);
               } else {
                  class_1799 heartStack = this.createCustomNetherStar("Heart");
                  player.method_7328(heartStack, true);
               }
            } else if (!(attacker instanceof class_1657)) {
               class_1799 heartStackx = this.createCustomNetherStar("Heart");
               player.method_7328(heartStackx, true);
            }

            double playerMaxHealth = player.method_45326(class_5134.field_23716);
            player.method_5996(class_5134.field_23716).method_6192(playerMaxHealth - 2.0D);
            player.method_7353(class_2561.method_43470("You lost a heart!").method_27692(class_124.field_1061), true);
            playerMaxHealth = player.method_45326(class_5134.field_23716);
            if (playerMaxHealth <= 1.0D) {
               ((class_3222)player).method_7336(class_1934.field_9219);
               player.method_7353(class_2561.method_43470("You lost all your hearts! You are now in spectator mode!").method_27692(class_124.field_1080), true);
               player.method_6033(1.0F);
               if (!player.method_37908().method_8450().method_8355(class_1928.field_19389)) {
                  player.method_31548().method_7388();
               }

               player.method_5682().method_3760().method_43514(class_2561.method_43470("\u2192 " + player.method_5476().getString() + " has lost all of his hearts and is eliminated!").method_27692(class_124.field_1061), false);
               return false;
            }
         }

         return true;
      });
      ModConfig config = (ModConfig)AutoConfig.getConfigHolder(ModConfig.class).getConfig();
      if (config.disableTotem) {
         ServerTickEvents.END_SERVER_TICK.register((server) -> {
            server.method_3760().method_14571().forEach((player) -> {
               class_1799 mainHandStack = player.method_6047();
               class_1799 offHandStack = player.method_6079();
               Integer totemAmount = player.method_31548().method_18861(class_1802.field_8288);
               if (mainHandStack.method_7909() == class_1802.field_8288 || offHandStack.method_7909() == class_1802.field_8288) {
                  player.method_6047().method_7934(totemAmount);
                  player.method_6079().method_7934(totemAmount);
               }

            });
         });
      }

      if (config.disableCPVP) {
         AttackEntityCallback.EVENT.register((player, world, hand, entity, hitResult) -> {
            if (entity.method_5864() == class_1299.field_6110) {
               entity.method_5768();
               player.method_7353(class_2561.method_43470("Crystals are disabled on this server!").method_27692(class_124.field_1061), true);
               return class_1269.field_5812;
            } else {
               return class_1269.field_5811;
            }
         });
         UseBlockCallback.EVENT.register((player, world, hand, hitResult) -> {
            Boolean playerInNether = world.method_8597().comp_649();
            if (playerInNether && world.method_8320(hitResult.method_17777()).method_26204() instanceof class_4969) {
               return class_1269.field_5811;
            } else if (world.method_8320(hitResult.method_17777()).method_26204() instanceof class_4969) {
               player.method_7353(class_2561.method_43470("Respawns anchors are disabled on this server.").method_27692(class_124.field_1061), true);
               return class_1269.field_5814;
            } else {
               return class_1269.field_5811;
            }
         });
      }

      if (config.disableEnderPearl) {
         UseItemCallback.EVENT.register((player, world, hand) -> {
            if (player.method_5998(hand).method_7909() == class_1802.field_8634) {
               player.method_7353(class_2561.method_43470("Ender pearls are disabled on this server!").method_27692(class_124.field_1061), true);
               return class_1271.method_22431(player.method_5998(hand));
            } else {
               return class_1271.method_22430(player.method_5998(hand));
            }
         });
      }

      if (config.disableNetherite) {
         ServerTickEvents.END_SERVER_TICK.register((server) -> {
            server.method_3760().method_14571().forEach((player) -> {
               class_1799 mainHandStack = player.method_6047();
               class_1799 offHandStack = player.method_6079();
               if (mainHandStack.method_7909() == class_1802.field_22022 || offHandStack.method_7909() == class_1802.field_22022) {
                  player.method_6047().method_7934(1);
                  player.method_6079().method_7934(1);
                  player.method_7353(class_2561.method_43470("Netherite swords are disabled on this server!").method_27692(class_124.field_1061), true);
               }

               if (mainHandStack.method_7909() == class_1802.field_22025 || offHandStack.method_7909() == class_1802.field_22025) {
                  player.method_6047().method_7934(1);
                  player.method_6079().method_7934(1);
                  player.method_7353(class_2561.method_43470("Netherite axes are disabled on this server!").method_27692(class_124.field_1061), true);
               }

               if (player.method_6118(class_1304.field_6169).method_7909() == class_1802.field_22027) {
                  player.method_5673(class_1304.field_6169, class_1799.field_8037);
                  player.method_7353(class_2561.method_43470("Netherite armor is disabled on this server!").method_27692(class_124.field_1061), true);
               }

               if (player.method_6118(class_1304.field_6174).method_7909() == class_1802.field_22028) {
                  player.method_5673(class_1304.field_6174, class_1799.field_8037);
                  player.method_7353(class_2561.method_43470("Netherite armor is disabled on this server!").method_27692(class_124.field_1061), true);
               }

               if (player.method_6118(class_1304.field_6172).method_7909() == class_1802.field_22029) {
                  player.method_5673(class_1304.field_6172, class_1799.field_8037);
                  player.method_7353(class_2561.method_43470("Netherite armor is disabled on this server!").method_27692(class_124.field_1061), true);
               }

               if (player.method_6118(class_1304.field_6166).method_7909() == class_1802.field_22030) {
                  player.method_5673(class_1304.field_6166, class_1799.field_8037);
                  player.method_7353(class_2561.method_43470("Netherite armor is disabled on this server!").method_27692(class_124.field_1061), true);
               }

            });
         });
      }

      if (config.noDragonEggEnderChest) {
         ServerTickEvents.END_SERVER_TICK.register((server) -> {
            server.method_3760().method_14571().forEach((player) -> {
               class_1730 enderChestInventory = player.method_7274();

               for(int i = 0; i < enderChestInventory.method_5439(); ++i) {
                  if (enderChestInventory.method_5438(i).method_7909() == class_1802.field_8840) {
                     enderChestInventory.method_5447(i, class_1799.field_8037);
                     player.method_7270(new class_1799(class_1802.field_8840));
                     player.method_7353(class_2561.method_43470("You cannot keep the dragon egg in your ender chest!").method_27692(class_124.field_1061), true);
                  }
               }

            });
         });
      }

      if (config.riptideCooldownEnabled) {
         UseItemCallback.EVENT.register((player, world, hand) -> {
            if (world.field_9236) {
               return class_1271.method_22430(player.method_5998(hand));
            } else {
               class_1799 itemStack = player.method_5998(hand);
               if (itemStack.method_7909() == class_1802.field_8547 && player.method_6123()) {
                  if (player.method_7357().method_7904(class_1802.field_8547)) {
                     return class_1271.method_22431(itemStack);
                  } else {
                     player.method_7357().method_7906(class_1802.field_8547, config.riptideCooldown);
                     return class_1271.method_22427(itemStack);
                  }
               } else {
                  return class_1271.method_22430(itemStack);
               }
            }
         });
      }

      UseItemCallback.EVENT.register((player, world, hand) -> {
         class_1799 itemStack = player.method_5998(hand);
         if (itemStack.method_7909() == class_1802.field_8137 && !itemStack.method_7958() && itemStack.method_7964().getString().equals("Heart") && player instanceof class_3222) {
            ModConfig modConfig = (ModConfig)AutoConfig.getConfigHolder(ModConfig.class).getConfig();
            double playerMaxHealth = player.method_45326(class_5134.field_23716);
            if (playerMaxHealth >= (double)modConfig.maxHeartCap) {
               player.method_7353(class_2561.method_43470("You have reached the maximum health limit!").method_27692(class_124.field_1061), true);
               return class_1271.method_22431(itemStack);
            } else {
               player.method_5996(class_5134.field_23716).method_6192(playerMaxHealth + 2.0D);
               player.method_7353(class_2561.method_43470("You gained an additional heart!").method_27692(class_124.field_1060), true);
               itemStack.method_7934(1);
               return class_1271.method_22427(itemStack);
            }
         } else {
            return class_1271.method_22430(itemStack);
         }
      });
      UseItemCallback.EVENT.register((player, world, hand) -> {
         class_1799 itemStack = player.method_5998(hand);
         if (itemStack.method_7909() == class_1802.field_8668 && itemStack.method_7958() && itemStack.method_7964().getString().equals("Revive Beacon") && player instanceof class_3222) {
            class_3222 serverPlayer = (class_3222)player;
            class_1277 inventory = new class_1277(27);
            serverPlayer.method_5682().method_3760().method_14571().forEach((p) -> {
               if (p.method_6032() <= 1.0F) {
                  class_1799 playerHead = new class_1799(class_1802.field_8575);
                  playerHead.method_57379(class_9334.field_50239, class_2561.method_43470(p.method_5477().getString()));
                  class_2487 nbtCompound = new class_2487();
                  nbtCompound.method_10582("SkullOwner", p.method_5477().getString());
                  class_9279 nbtComponent = class_9279.method_57456(nbtCompound);
                  playerHead.method_57379(class_9334.field_49628, nbtComponent);
                  inventory.method_5491(playerHead);
               }

            });

            for(int i = 0; i < inventory.method_5439(); ++i) {
               if (inventory.method_5438(i).method_7960()) {
                  class_1799 glassPane = new class_1799(class_1802.field_8871);
                  glassPane.method_57379(class_9334.field_50239, class_2561.method_43470("Empty"));
                  inventory.method_5447(i, glassPane);
               }
            }

            serverPlayer.method_17355(new class_747((syncId, playerInventory, playerEntity) -> {
               return new ReviveScreenHandler(syncId, playerInventory, inventory);
            }, class_2561.method_30163("Revive Players")));
            return class_1271.method_22427(itemStack);
         } else {
            return class_1271.method_22430(itemStack);
         }
      });
      UseBlockCallback.EVENT.register((player, world, hand, hitResult) -> {
         class_1799 itemStack = player.method_5998(hand);
         return itemStack.method_7909() == class_1802.field_8668 && itemStack.method_7958() && itemStack.method_7964().getString().equals("Revive Beacon") ? class_1269.field_5814 : class_1269.field_5811;
      });
      ServerLivingEntityEvents.ALLOW_DEATH.register((entity, source, amount) -> {
         if (entity instanceof class_1657) {
            class_1657 player = (class_1657)entity;
            double playerMaxHealth = player.method_45326(class_5134.field_23716);
            ModConfig modConfig = (ModConfig)AutoConfig.getConfigHolder(ModConfig.class).getConfig();
            if (playerMaxHealth > (double)modConfig.maxHeartCap) {
               player.method_7353(class_2561.method_43470("You have reached the maximum health limit!").method_27692(class_124.field_1061), true);
               player.method_5996(class_5134.field_23716).method_6192((double)modConfig.maxHeartCap);
            }
         }

         return true;
      });
   }

   private class_1799 createCustomNetherStar(String name) {
      class_1799 heartStack = new class_1799(class_1802.field_8137);
      heartStack.method_57379(class_9334.field_50239, class_2561.method_43470(name));
      heartStack.method_57379(class_9334.field_49641, false);
      return heartStack;
   }

   private class_1799 createReviveBeacon(String name) {
      class_1799 reviveBeaconStack = new class_1799(class_1802.field_8668);
      reviveBeaconStack.method_57379(class_9334.field_50239, class_2561.method_43470(name));
      reviveBeaconStack.method_57379(class_9334.field_49641, true);
      return reviveBeaconStack;
   }

   private void increasePlayerHealth(class_1657 player) {
      double playerMaxHealth = player.method_45326(class_5134.field_23716);
      player.method_5996(class_5134.field_23716).method_6192(playerMaxHealth + 2.0D);
   }

   private void registerCommands() {
      CommandRegistrationCallback.EVENT.register((dispatcher, registryAccess, environment) -> {
         dispatcher.register((LiteralArgumentBuilder)((LiteralArgumentBuilder)class_2170.method_9247("lifesteal").then(class_2170.method_9247("withdraw").then(class_2170.method_9244("amount", IntegerArgumentType.integer(0)).executes((context) -> {
            class_2168 source = (class_2168)context.getSource();
            class_3222 player = source.method_44023();
            int amount = IntegerArgumentType.getInteger(context, "amount");
            double playerMaxHealth = player.method_45326(class_5134.field_23716);
            if ((double)amount >= playerMaxHealth / 2.0D) {
               player.method_7353(class_2561.method_43470("Withdrawing heart failed!").method_27692(class_124.field_1061), true);
               return 0;
            } else {
               if (playerMaxHealth >= (double)amount * 2.0D) {
                  double newMaxHealth = playerMaxHealth - (double)amount * 2.0D;
                  double playerCurrentHealth = (double)player.method_6032();
                  player.method_5996(class_5134.field_23716).method_6192(newMaxHealth);
                  if (playerCurrentHealth < newMaxHealth) {
                     player.method_6033((float)newMaxHealth);
                  }

                  class_1799 heartStack = this.createCustomNetherStar("Heart");
                  heartStack.method_7939(amount);
                  player.method_7270(heartStack);
                  player.method_7353(class_2561.method_43470("You have successfully withdrawn the heart!").method_27692(class_124.field_1060), true);
               } else {
                  player.method_7353(class_2561.method_43470("Withdrawing heart failed!").method_27692(class_124.field_1061), true);
               }

               return amount;
            }
         })))).then(((LiteralArgumentBuilder)class_2170.method_9247("give").requires((source) -> {
            return source.method_9259(2);
         })).then(class_2170.method_9244("targets", class_2186.method_9308()).then(class_2170.method_9244("amount", IntegerArgumentType.integer(0)).executes((context) -> {
            Collection<class_3222> targets = class_2186.method_9312(context, "targets");
            int amount = IntegerArgumentType.getInteger(context, "amount");
            Iterator var3 = targets.iterator();

            while(var3.hasNext()) {
               class_3222 target = (class_3222)var3.next();
               double currentMaxHealth = target.method_45326(class_5134.field_23716);
               double newMaxHealth = Math.max(2.0D, currentMaxHealth + (double)amount * 2.0D);
               target.method_5996(class_5134.field_23716).method_6192(newMaxHealth);
               target.method_6033((float)newMaxHealth);
            }

            return targets.size();
         })))));
      });
   }

   private void registerReviveCommand() {
      CommandRegistrationCallback.EVENT.register((dispatcher, registryAccess, environment) -> {
         dispatcher.register((LiteralArgumentBuilder)class_2170.method_9247("revive").then(class_2170.method_9244("player", class_2186.method_9305()).executes((context) -> {
            return this.executeRevive((class_2168)context.getSource(), class_2186.method_9315(context, "player"), false);
         })));
         dispatcher.register((LiteralArgumentBuilder)class_2170.method_9247("lifesteal").then(class_2170.method_9247("revive").then(class_2170.method_9244("player", class_2186.method_9305()).executes((context) -> {
            return this.executeRevive((class_2168)context.getSource(), class_2186.method_9315(context, "player"), false);
         }))));
      });
   }

   private void registerOpReviveCommand() {
      CommandRegistrationCallback.EVENT.register((dispatcher, registryAccess, environment) -> {
         dispatcher.register((LiteralArgumentBuilder)class_2170.method_9247("lifesteal").then(((LiteralArgumentBuilder)class_2170.method_9247("oprevive").requires((source) -> {
            return source.method_9259(2);
         })).then(class_2170.method_9244("player", class_2186.method_9305()).executes((context) -> {
            return this.executeRevive((class_2168)context.getSource(), class_2186.method_9315(context, "player"), true);
         }))));
      });
   }

   private int executeRevive_(class_3222 player, class_3222 target, boolean isOpRevive) {
      class_1263 inventory = player.method_31548();
      if (player != target && !(target.method_6032() > 2.0F)) {
         double currentMaxHealth = target.method_45326(class_5134.field_23716);
         double newMaxHealth = Math.max(2.0D, currentMaxHealth + 8.0D);
         target.method_5996(class_5134.field_23716).method_6192(newMaxHealth);
         target.method_6033((float)newMaxHealth);
         target.method_7336(class_1934.field_9215);
         player.method_7353(class_2561.method_43470("Player revived successfully!").method_27692(class_124.field_1060), true);
         return 1;
      } else {
         player.method_7353(class_2561.method_43470("You cannot revive this player!").method_27692(class_124.field_1061), true);
         return 0;
      }
   }

   private int executeRevive(class_2168 source, class_3222 target, boolean isOpRevive) {
      class_3222 player = source.method_44023();
      class_1263 inventory = player.method_31548();
      if (player != target && !(target.method_6032() > 2.0F)) {
         double currentMaxHealth = target.method_45326(class_5134.field_23716);
         double newMaxHealth = Math.max(2.0D, currentMaxHealth + 8.0D);
         target.method_5996(class_5134.field_23716).method_6192(newMaxHealth);
         target.method_6033((float)newMaxHealth);
         target.method_7336(class_1934.field_9215);
         player.method_7353(class_2561.method_43470("Player revived successfully!").method_27692(class_124.field_1060), true);
         return 1;
      } else {
         player.method_7353(class_2561.method_43470("You cannot revive this player!").method_27692(class_124.field_1061), true);
         return 0;
      }
   }

   public void recipeViewRecipeCommand() {
      CommandRegistrationCallback.EVENT.register((dispatcher, registryAccess, environment) -> {
         dispatcher.register((LiteralArgumentBuilder)class_2170.method_9247("lifesteal").then(class_2170.method_9247("viewRecipes").executes((context) -> {
            class_3222 player = ((class_2168)context.getSource()).method_44023();
            this.openRecipeGUI(player);
            return 1;
         })));
      });
   }

   public void openRecipeGUI(class_3222 player) {
      if (player instanceof class_3222) {
         class_1277 inventory = new class_1277(45);
         class_1799 rawGoldBlock = new class_1799(class_1802.field_33507);
         rawGoldBlock.method_57379(class_9334.field_50239, class_2561.method_43470("Raw Gold Block"));
         class_1799 netheriteIngot = new class_1799(class_1802.field_22020);
         netheriteIngot.method_57379(class_9334.field_50239, class_2561.method_43470("Netherite Ingot"));
         class_1799 netherStar = new class_1799(class_1802.field_8137);
         netherStar.method_57379(class_9334.field_50239, class_2561.method_43470("Nether Star"));
         class_1799 beacon = new class_1799(class_1802.field_8668);
         beacon.method_57379(class_9334.field_50239, class_2561.method_43470("Beacon"));
         class_1799 reviveBeacon = this.createReviveBeacon("Revive Beacon");
         class_1799 heart = this.createCustomNetherStar("Heart");
         String[] recipePattern1 = new String[]{"RNR", "NGN", "RNR"};
         String[] recipePattern2 = new String[]{"NGN", "GBG", "NGN"};
         int startRow1 = 1;
         int startCol1 = 0;
         int startRow2 = 1;
         int startCol2 = 5;

         int i;
         String row;
         int j;
         char c;
         class_1799 itemStack;
         int slotIndex;
         for(i = 0; i < recipePattern1.length; ++i) {
            row = recipePattern1[i];

            for(j = 0; j < row.length(); ++j) {
               c = row.charAt(j);
               itemStack = class_1799.field_8037;
               switch(c) {
               case 'G':
                  itemStack = netherStar;
                  break;
               case 'N':
                  itemStack = netheriteIngot;
                  break;
               case 'R':
                  itemStack = rawGoldBlock;
               }

               slotIndex = (startRow1 + i) * 9 + startCol1 + j;
               inventory.method_5447(slotIndex, itemStack);
            }
         }

         for(i = 0; i < recipePattern2.length; ++i) {
            row = recipePattern2[i];

            for(j = 0; j < row.length(); ++j) {
               c = row.charAt(j);
               itemStack = class_1799.field_8037;
               switch(c) {
               case 'B':
                  itemStack = beacon;
                  break;
               case 'G':
                  itemStack = netherStar;
                  break;
               case 'N':
                  itemStack = netheriteIngot;
               }

               slotIndex = (startRow2 + i) * 9 + startCol2 + j;
               inventory.method_5447(slotIndex, itemStack);
            }
         }

         i = (startRow1 + 1) * 9 + startCol1 + 3;
         inventory.method_5447(i, heart);
         int resultSlot2 = (startRow2 + 1) * 9 + startCol2 + 3;
         inventory.method_5447(resultSlot2, reviveBeacon);

         for(j = 0; j < inventory.method_5439(); ++j) {
            if (inventory.method_5438(j).method_7960()) {
               class_1799 glassPane = new class_1799(class_1802.field_8736);
               glassPane.method_57379(class_9334.field_50239, class_2561.method_43470("Empty"));
               inventory.method_5447(j, glassPane);
            }
         }

         player.method_17355(new class_747((syncId, playerInventory, playerEntity) -> {
            return new RecipeScreenHandler(syncId, playerInventory, inventory);
         }, class_2561.method_30163("View Recipes")));
      }

   }
}
